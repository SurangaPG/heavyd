<?xml version="1.0" encoding="UTF-8" ?>

<project name="HeavyD - startup" default="info">

    <!-- Auto include all the heavyd build files in the vendor dirs.
    <import>
        <fileset dir="${project.basedir}/.heavyd/vendor">
            <patternset>
                <include name="*.heavyd-startup.xml"/>
            </patternset>
        </fileset>
    </import>
     -->

    <!--
    Property bundle loading

    Ensure that the full property date is written out in the file system.
    This is to make it easier to add extra properties etc to the project set.

    All the .yml files in the /properties/dist, env and local folder are combined and aggregated
    into a basic set.
-->
    <!-- Include custom property loading tasks -->
    <includepath classpath="${project.basedir}/.heavyd/vendor/surangapg/phing-property-bundle/src" />

    <taskdef classname="PropertyDirWriteTask" name="property-dir-write" />
    <taskdef classname="PropertyDirLoadTask" name="property-dir" />

    <property name="output.FULL_PROPERTIES_EXIST" value="false" />
    <exec command="if [ -f '${project.basedir}/properties/bin.yml' ]; then echo 'true'; else echo 'false'; fi;" outputProperty="output.FULL_PROPERTIES_EXIST" />
    <if>
        <equals arg1="${output.FULL_PROPERTIES_EXIST}" arg2="false" />
        <then>
            <echo message="full property files don't appear to be generated yet, generating on the fly via property-dir-write" />
            <property-dir-write originDir="${project.basedir}/properties"
                                subLevels="dist,stage,env"
                                outputDir="${project.basedir}/properties"
                                order="project,dir,bin,behat"
                                override="true"
                                outputFull="false"
            />
        </then>
    </if>

    <!-- Loads the full property files from the base dir -->
    <property-dir propertyDir="${project.basedir}/properties"/>

    <target name="info" description="Show some basic information.">
        <echo message="Welcome to the HeavyD project startup. This buildfile is used to wrap around the various phing files needed to start up the project." />
    </target>

    <target name="heavyd-startup:project-retrofit" description="Adds some basics to a pre-existing project">
        <phingcall target="startup:basic-dirs"/>
        <phingcall target="startup:mirror-templates"/>
    </target>

    <target name="heavyd-startup:drupal8" description="sets up a heavyD drupal 8 project for the very first time. ">
        <phingcall target="startup:basic-dirs"/>
        <phingcall target="startup:mirror-templates"/>
        <phingcall target="startup:optional-files" />
    </target>

    <target name="heavyd-startup:setup-profile" description="Copies over a heavyD base config profile and connected composer file to kickstart a project..">
        <property name="profile.to.use" value="default" />

        <copy todir="${project.basedir}/etc/site/default/config">
            <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/config-profile/${profile.to.use}/config">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </copy>

        <!-- Copy over the connected composer.json file -->
        <copy file="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/config-profile/${profile.to.use}/composer.json"
              todir="${project.basedir}/" />
    </target>

    <target name="startup:basic-dirs" description="Set up the basic directories for a heavyD project">
        <mkdir dir="${project.basedir}/properties" />
        <mkdir dir="${project.basedir}/temp/cache" />
        <mkdir dir="${project.basedir}/temp/artifact" />
        <mkdir dir="${project.basedir}/etc" />
        <mkdir dir="${project.basedir}/etc/templates" />
        <mkdir dir="${project.basedir}/etc/stage" />
        <mkdir dir="${project.basedir}/etc/env" />
        <mkdir dir="${project.basedir}/etc/site" />
        <mkdir dir="${project.basedir}/scripts" />
        <mkdir dir="${project.basedir}/tests" />
        <mkdir dir="${project.basedir}/tests/behat" />
        <mkdir dir="${project.basedir}/tests/phpunit" />
        <mkdir dir="${project.basedir}/tests/haunt" />
    </target>

    <target name="startup:mirror-templates" description="mirrors all the template files in the .phing dir to the active site.">
        <copy todir="${project.basedir}/">
            <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/misc">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </copy>

        <copy todir="${project.basedir}/web/sites/default/">
            <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/settings">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </copy>

        <copy todir="${project.basedir}/properties/">
            <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/properties">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </copy>

        <copy todir="${project.basedir}/">
            <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/update">
                <patternset>
                    <include name="**"/>
                </patternset>
            </fileset>
        </copy>
    </target>

    <target name="startup:optional-files">
        <!-- Copy over some base files if they are not present -->
        <copy file="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/optional/composer.json"
              tofile="${project.basedir}/composer.json" />

        <copy file="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/optional/.gitignore"
              tofile="${project.basedir}/.gitignore" />

        <!-- Include the baseline module and theme -->
        <if>
            <not>
                <available file='${dir.web.root}/modules/custom/baseline' type='dir' property="exists.baseline.module"/>
            </not>

            <then>
                <echo message="Baseline module doesn't exist, adding it." />
                <copy todir="${project.basedir}/web/modules/custom/baseline">
                    <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/optional/baseline">
                        <patternset>
                            <include name="**"/>
                        </patternset>
                    </fileset>
                </copy>
            </then>
            <else>
                <echo message="Baseline module already present." />
            </else>
        </if>

        <if>
            <not>
                <available file='${dir.web.root}/themes/custom/baseline_bootstrap' type='dir' property="exists.baseline.theme"/>
            </not>

            <then>
                <echo message="Baseline theme doesn't exist, adding it." />
                <echo message="${exists.baseline.theme}" />
                <copy todir="${project.basedir}/web/themes/custom/baseline_bootstrap">
                    <fileset dir="${project.basedir}/.heavyd/vendor/heavyd/platform/templates/startup/optional/baseline_bootstrap">
                        <patternset>
                            <include name="**"/>
                        </patternset>
                    </fileset>
                </copy>
            </then>
            <else>
                <echo message="Baseline theme already present." />
            </else>
        </if>
    </target>
</project>
